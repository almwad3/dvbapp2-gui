<wizard>
		<step id="start">
			<condition>
from Plugins.SystemPlugins.NetworkWizard.NetworkWizard import config
self.condition = config.misc.networkwizard.hasnetwork.value
			</condition>
			<text value="Would you like to check for available updates for your STB_BOX ?" />
			<config screen="InstallWizard" module="InstallWizard" args="3" type="ConfigList" />
			<code>
self["tunera"].hide()  
self["tunerb"].hide()  
self["tunerc"].hide()  
self["tunerd"].hide()  
self.clearSelectedKeys()
self.selectKey("UP")
self.selectKey("DOWN")
			</code>
		</step>
		<step id="nima">
			<condition>
from Components.NimManager import nimmanager
self.condition = len(nimmanager.nim_slots) > 0 and not nimmanager.nim_slots[0].empty
			</condition>
			<text value="It is now time to configure your first tuner. Please set up tuner A" />
			<config screen="NimSetup" module="Satconfig" args="0" type="ConfigList" />
			<code>
self["tunera"].show()  
self["tunerb"].hide()  
self["tunerc"].hide()  
self["tunerd"].hide()  
self.clearSelectedKeys()
self.selectKey("LEFT")
self.selectKey("RIGHT")
			</code>
		</step>
		<step id="nimb">
			<condition>
from Components.NimManager import nimmanager
self.condition = len(nimmanager.nim_slots) > 1 and not nimmanager.nim_slots[1].empty
			</condition>
			<text value="It is now time to configure your second tuner. Please set up tuner B" />
			<config screen="NimSetup" module="Satconfig" args="1" type="ConfigList" />
			<code>
self["tunera"].hide()  
self["tunerb"].show()  
self["tunerc"].hide()  
self["tunerd"].hide() 
self.clearSelectedKeys()
self.selectKey("LEFT")
self.selectKey("RIGHT")
			</code>
		</step>
		<step id="nimc">
			<condition>
from Components.NimManager import nimmanager
self.condition = len(nimmanager.nim_slots) > 2 and not nimmanager.nim_slots[2].empty
			</condition>
			<text value="It is now time to configure your third tuner. Please set up tuner C" />
			<config screen="NimSetup" module="Satconfig" args="2" type="ConfigList" />
			<code>
self["tunera"].hide()  
self["tunerb"].hide()  
self["tunerc"].show()  
self["tunerd"].hide()  
self.clearSelectedKeys()
self.selectKey("LEFT")
self.selectKey("RIGHT")
			</code>
		</step>
		<step id="nimd">
			<condition>
from Components.NimManager import nimmanager
self.condition = len(nimmanager.nim_slots) > 3 and not nimmanager.nim_slots[3].empty
			</condition>
			<text value="It is now time to configure your fourth tuner. Please set up tuner D" />
			<config screen="NimSetup" module="Satconfig" args="3" type="ConfigList" />
			<code>
self["tunera"].hide()  
self["tunerb"].hide()  
self["tunerc"].hide()  
self["tunerd"].show()  
self.clearSelectedKeys()
self.selectKey("LEFT")
self.selectKey("RIGHT")
			</code>
		</step>
		<step id="channels">
			<condition>
from Components.NimManager import nimmanager
from Plugins.SystemPlugins.NetworkWizard.NetworkWizard import config
self.condition = nimmanager.somethingConnected() and config.misc.networkwizard.hasnetwork.value
			</condition>
			<text value="Do you want to install a channel list?" />
			<config screen="InstallWizard" module="InstallWizard" args="1" type="ConfigList" />
			<code>
self["tunera"].hide()  
self["tunerb"].hide()  
self["tunerc"].hide()  
self["tunerd"].hide()
self.hideRc()
self["red"].hide()
self.clearSelectedKeys()
self.selectKey("LEFT")
self.selectKey("RIGHT")
			</code>
		</step>

		<step id="scanquestion">
			<text value="Do you want to do a service scan?" />
			<condition>
from Components.NimManager import nimmanager
self.condition = nimmanager.somethingConnected()
			</condition>
			<code>
self.hideRc()
self["red"].hide()
			</code>
			<list>
				<listentry caption="No, scan later manually" step="softcam" />
				<listentry caption="Yes, do an automatic scan now" step="scan" />
				<listentry caption="Yes, do a manual scan now" step="manualscan" />
			</list>
		</step>
		<step id="scan" nextstep="softcam">
			<condition>
from Components.NimManager import nimmanager
self.condition = nimmanager.somethingConnected()
			</condition>
			<text value="What do you want to scan?" />
			<config screen="ScanSimple" module="ScanSetup" type="ConfigList" />
		</step>
		<step id="manualscan">
			<condition>
from Components.NimManager import nimmanager
self.condition = nimmanager.somethingConnected()
			</condition>
			<text value="What do you want to scan?" />
			<config screen="ScanSetup" module="ScanSetup" type="ConfigList" />
		</step>
		<step id="nextscan">
			<condition>
from Components.NimManager import nimmanager
self.condition = nimmanager.somethingConnected()
			</condition>
			<text value="Do you want to do another manual service scan?" />
			<list>
				<listentry caption="No, scan later manually" step="softcam" />
				<listentry caption="Yes, do another manual scan now" step="manualscan" />
			</list>
		</step>
		<step id="softcam">
			<condition>
from Plugins.SystemPlugins.NetworkWizard.NetworkWizard import config
self.condition = config.misc.networkwizard.hasnetwork.value
			</condition>
			<text value="Would you like to install a softcam?"/>
			<config screen="InstallWizard" module="InstallWizard" args="2" type="ConfigList"/>
			<code>
self.clearSelectedKeys()
self.selectKey("LEFT")
self.selectKey("RIGHT")
			</code>
		</step>
		<step id="expert">
			<text value="Your STB_BOX offers three levels of configuration options:\n\nSimple - We suggest this level if this is your first contact with a STB_BOX.\nIntermediate - This level enables you to change some more options, mainly the graphical user interface and the behaviour of your STB_BOX.\nExpert - This gives you full control over all available settings of your STB_BOX.\n\nWarning: Higher levels may lead to increased usage complexity." />
			<list type="config" configelement="config.usage.setup_level" />
		</step>
		<step id="end" laststep="true">
			<condition>
self.condition = self.isLastWizard
			</condition>
			<text value="Thank you for using the wizard. Your STB_BOX is now ready to use.\nPlease press OK to start using your STB_BOX." />
			<code>
self.clearSelectedKeys()
self.selectKey("OK")
			</code>
		</step>
</wizard>
